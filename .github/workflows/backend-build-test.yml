name: Backend build and test.

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.10']

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip

    - name: Set up
      env:
        ENGINE: django.db.backends.mysql
        NAME: moviegram
        DB_USER: root
        DB_PASSWORD: asdf
        HOST: localhost
        PORT: 3306
      run: |
        sudo systemctl start mysql
        # mysql -u root -proot -e "CREATE USER '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASSWORD';"
        mysql -u root -proot -e "GRANT CREATE, DROP, SELECT, UPDATE, INSERT, DELETE, ALTER, REFERENCES, INDEX on $NAME.* to '$DB_USER'@'localhost';"
        mysql -u$DB_USER -p$DB_PASSWORD -e "CREATE DATABASE $NAME DEFAULT CHARACTER SET utf8mb4;"
        python3 --version
        python3 -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python manage.py makemigrations

        # Output the environment variables
        echo $ENGINE
        echo $NAME
        echo $DB_USER
        echo $DB_PASSWORD
        echo $HOST
        echo $PORT

        python manage.py migrate
        export DJANGO_SECRET_KEY="$(base64 <<< "$RANDOM|TeStiNg|$RANDOM" | tr -d '\n')"

    - name: Run tests
      env:
        ENGINE: django.db.backends.mysql
        NAME: moviegram
        DB_USER: root
        DB_PASSWORD: asdf
        HOST: localhost
        PORT: 3306
      run: |
        mysql -u root -proot -e "GRANT ALL ON moviegram.* TO '$DB_USER'@'localhost';"
        source venv/bin/activate
        python manage.py test
